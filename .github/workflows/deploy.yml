name: CD ‚Äì Deploy Online Shop (API)

on:
  push:
    branches:
      - master
      - develop
      - feature/**
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Run tests
        run: ./mvnw -B test

  build-api:
    needs: unit-tests
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}
      USERNAME: mycodeschool
      REPO: online_shop_api

    steps:
      - uses: actions/checkout@v4


      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi-arch image
        env:
          TAG: "${{ format('{0}-{1}', steps.date.outputs.date, env.ENVIRONMENT) }}"
        run: |
          # ob»õinem data exactƒÉ (identic cu ce folose»ôte script-ul tƒÉu)
          DATE="$(date '+%d.%m.%Y.%H.%M.%S')"
          export TAG="${DATE}-${ENVIRONMENT}"

          echo "üåÄ  Will push image as: ${USERNAME}/${REPO}:${TAG}"

          chmod +x ci/build-publish.sh
          # Build context ‚Äû.‚Äù + ARG pentru Spring
          ./ci/build-publish.sh . --build-arg SPRING_PROFILES_ACTIVE=docker
